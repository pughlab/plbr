type DataVariable {
    dataVariableID: ID! @id
    allowedRoles: [String]
    # chromosome: String
    # start: Int
    # end: Int
    # datavalue: Float
    # Define fields you want to search over here, transformation script must map to this shape

    # currentDefinition: DataVariableDefinition! @relationship(type: "HAS_DEFINITION", direction: OUT, properties: "HasDefinition")
    # currentDefinition: DataVariableDefinition! @relationship(type: "HAS_DEFINITION", direction: OUT)
    # previousDefinitions: [DataVariableDefinition!]! @relationship(type: "HAS_DEFINITION", direction: OUT)

    fields: [DataVariableField!]! @relationship(type: "HAS_FIELD", direction: OUT)
    # fields: [String]
}

type DataVariableField {
    dataVariableFieldID: ID! @id
    allowedRoles: [String]
    # dataVariable: DataVariable @relationship(type: "HAS_DEFINITION", direction: IN)
    # name: String!
    code: String!
    description: String!
    jsonSchema: JSON!
    hasFieldDefinition: DataVariableFieldDefinition! @relationship(type: "HAS_FIELD_DEFINITION", direction: OUT)
}

type DataVariableFieldDefinition {
    dataVariableFieldDefinitionID: ID! @id
    allowedRoles: [String]
    xref: ID!
    description: String!
    validationSchema: JSON

    hasFieldValues: [DataVariableValue!]! @relationship(type: "HAS_FIELD_VALUE", direction: OUT)
}

type DataVariableValue {
    dataVariableValueID: ID! @id
    allowedRoles: [String]
    value: JSON!
    fromFieldDefinition: DataVariableFieldDefinition! @relationship(type: "HAS_FIELD_DEFINITION", direction: OUT) 
}

extend type DataVariable @auth(
  rules: [{
      isAuthenticated: true,
      where: {allowedRoles: "$jwt.realm_access.roles"}
    }]
)

extend type DataVariableField @auth(
  rules: [{
      isAuthenticated: true,
      where: {allowedRoles: "$jwt.realm_access.roles"}
    }
    ]
)

extend type DataVariableFieldDefinition @auth(
  rules: [{
      isAuthenticated: true,
      where: {allowedRoles: "$jwt.realm_access.roles"}
    }
    ]
)

extend type DataVariableValue @auth(
  rules: [{
      isAuthenticated: true,
      where: {allowedRoles: "$jwt.realm_access.roles"}
    }
    ]
)